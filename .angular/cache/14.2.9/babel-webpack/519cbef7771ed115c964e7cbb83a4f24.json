{"ast":null,"code":"import { ElementRef } from '@angular/core'; // import { Loader } from \"@googlemaps/js-api-loader\";\n\nimport { Loader } from 'google-maps';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/reports/reports.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/select\";\nimport * as i5 from \"@angular/material/core\";\nconst _c0 = [\"map\"];\n\nfunction HeatmapComponent_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const province_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    i0.ɵɵproperty(\"value\", i_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", province_r2.name, \" \");\n  }\n} // declare var google: any;\n\n\nexport let HeatmapComponent = /*#__PURE__*/(() => {\n  class HeatmapComponent {\n    constructor(reportsService) {\n      this.reportsService = reportsService;\n      this.options = {\n        version: 'weekly',\n        libraries: ['places', 'visualization']\n      };\n      this.loader = new Loader('AIzaSyCKMeXCwfKVZhQkduS-RCM5_nA3Gwb7PCQ', this.options);\n      this.google = this.loader.load();\n      this.provinces = [{\n        name: 'GP',\n        coords: {\n          lat: -26.058369702576982,\n          lng: 28.303636655668157\n        }\n      }, {\n        name: 'LP',\n        coords: {\n          lat: -23.629222062093202,\n          lng: 29.5901150223643\n        }\n      }, {\n        name: 'MP',\n        coords: {\n          lat: -29.805980751084693,\n          lng: 30.62975440020216\n        }\n      }, {\n        name: 'KZN',\n        coords: {\n          lat: -28.574256390265038,\n          lng: 30.749920334437405\n        }\n      }, {\n        name: 'FS',\n        coords: {\n          lat: -28.280858253294955,\n          lng: 27.09285965891125\n        }\n      }, {\n        name: 'NW',\n        coords: {\n          lat: -26.26225794809457,\n          lng: 25.726860304313004\n        }\n      }, {\n        name: 'NC',\n        coords: {\n          lat: -29.28819874527113,\n          lng: 22.009343693904214\n        }\n      }, {\n        name: 'WC',\n        coords: {\n          lat: -33.09100557280346,\n          lng: 21.15874514080357\n        }\n      }, {\n        name: 'EC',\n        coords: {\n          lat: -32.19114944794681,\n          lng: 26.135189224729164\n        }\n      }];\n      this.selected = 0;\n      this.activeProvince = this.provinces[this.selected];\n      this.hotspots = [];\n    }\n\n    ngOnInit() {\n      this.getReports();\n      this.getLiveLocation();\n      this.initMap();\n    }\n\n    ngAfterViewInit() {}\n\n    updateMap(i) {\n      this.initMap();\n      this.activeProvince = this.provinces[i];\n      this.drawMap();\n    }\n\n    getReports() {\n      this.reportsService.getReports().then(resp => {\n        this.reports = resp.reports;\n        console.log(\"=============\", this.reports);\n      }).catch(error => {});\n    }\n\n    initMap() {\n      console.log(this.mapData); // console.log();\n\n      this.reports.forEach(dataPoint => {\n        if (typeof dataPoint.geoLocation != 'undefined') {\n          this.hotspots.push({\n            location: new google.maps.LatLng(dataPoint.geoLocation.latitude, dataPoint.geoLocation.longitude),\n            weight: 1\n          });\n        }\n      });\n      console.log(this.hotspots);\n      this.drawMap();\n    }\n\n    drawMap() {\n      let map;\n      console.log('===lat', this.liveLocation);\n      map = new google.maps.Map(this.map.nativeElement, {\n        zoom: 8,\n        center: {\n          lat: this.liveLocation.coords.latitude,\n          lng: this.liveLocation.coords.longitude\n        },\n        mapTypeId: 'roadmap'\n      });\n      let heatmap;\n      console.log(this.hotspots);\n      heatmap = new google.maps.visualization.HeatmapLayer({\n        data: this.hotspots,\n        map: map\n      });\n      var data = new google.maps.Marker({\n        position: {\n          lat: this.liveLocation.coords.latitude,\n          lng: this.liveLocation.coords.longitude\n        },\n        map,\n        title: \"current location\"\n      });\n      map.draw(data, {\n        showTooltip: true,\n        showInfoWindow: true\n      });\n      heatmap.set('radius', heatmap.get('radius') ? null : 20);\n    }\n\n    getLiveLocation() {\n      const successCallback = position => {\n        console.log('=====Live=====', position);\n        this.liveLocation = position;\n      };\n\n      const errorCallback = error => {\n        console.log(error);\n      };\n\n      navigator.geolocation.watchPosition(successCallback, errorCallback);\n    }\n\n  }\n\n  HeatmapComponent.ɵfac = function HeatmapComponent_Factory(t) {\n    return new (t || HeatmapComponent)(i0.ɵɵdirectiveInject(i1.ReportsService));\n  };\n\n  HeatmapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HeatmapComponent,\n    selectors: [[\"app-heatmap\"]],\n    viewQuery: function HeatmapComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.map = _t.first);\n      }\n    },\n    inputs: {\n      mapData: \"mapData\"\n    },\n    decls: 7,\n    vars: 2,\n    consts: [[\"appearance\", \"outline\"], [3, \"value\", \"valueChange\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"map\", 2, \"height\", \"500px\"], [\"map\", \"\"], [3, \"value\"]],\n    template: function HeatmapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-form-field\", 0)(1, \"mat-label\");\n        i0.ɵɵtext(2, \"View by region\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-select\", 1);\n        i0.ɵɵlistener(\"valueChange\", function HeatmapComponent_Template_mat_select_valueChange_3_listener($event) {\n          return ctx.selected = $event;\n        })(\"selectionChange\", function HeatmapComponent_Template_mat_select_selectionChange_3_listener($event) {\n          return ctx.updateMap($event.value);\n        });\n        i0.ɵɵtemplate(4, HeatmapComponent_mat_option_4_Template, 2, 2, \"mat-option\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(5, \"div\", 3, 4);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"value\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.provinces);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.MatFormField, i3.MatLabel, i4.MatSelect, i5.MatOption],\n    styles: [\"mat-form-field[_ngcontent-%COMP%]{font-size:14px;width:100%}\"]\n  });\n  return HeatmapComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}